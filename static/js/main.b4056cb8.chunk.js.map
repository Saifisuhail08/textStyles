{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","words","trim","split","console","log","CapitalizedWords","forEach","element","push","slice","length","join","alert","reverse","newtext","navigator","clipboard","writeText","defaultProps","Alert","role","word","lower","charAt","captialize","msg","App","setMode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4056cb8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n        </li>\r\n        </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nNavbar.defaultProps = {title: 'Set title here',\r\n                    aboutText: 'About Us',\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpclick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\", \"success\");\r\n  };\r\n  const handleLoclick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\", \"success\");\r\n  };\r\n  const handleTitleCclick = () => {\r\n    if (text !== \"\") {\r\n      let textTmp = text.trim();\r\n      var words = textTmp.split(\" \");\r\n      console.log(words);\r\n      var CapitalizedWords = [];\r\n      words.forEach((element) => {\r\n        CapitalizedWords.push(\r\n          element[0].toUpperCase() + element.slice(1, element.length)\r\n        );\r\n      });\r\n      setText(CapitalizedWords.join(\" \"));\r\n      props.showAlert(\"Converted to TitleCase\", \"success\");\r\n    }else{\r\n        alert('Please Enter Text');\r\n    }\r\n  };\r\n\r\n  const handleClearclick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"success\");\r\n  };\r\n\r\n  const handleReverseclick = () => {\r\n    let newText = text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"Converted to reverse\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let newtext = text;\r\n    navigator.clipboard.writeText(newtext);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleTitleCclick}>\r\n          Convert to TitleCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleReverseclick}>\r\n          Reverse Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearclick}>\r\n          Clear Text\r\n        </button>\r\n        <div className=\"container my-3\">\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            {text.split(\" \").length}words and {text.length}characters\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n          <h2>Preview</h2>\r\n          <p>\r\n            {text.length > 0\r\n              ? text\r\n              : \"Enter something in the textbox above to preview it here\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captialize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n        };\r\n    return (\r\n        props.alert &&\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong> {captialize(props.alert.type)}</strong>:{props.alert.msg}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport Alert from './Components/Alert';\n\nimport React, { useState } from 'react';\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)      \n    }, 1500);\n\n  }\n\nconst toggleMode =()=>{\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor=\"#042743\"\n    showAlert(\"Dark mode has been enabled\",\"success\");\n\n  }    \n  else{\n    setMode('light')\n    document.body.style.backgroundColor=\"white\"\n    showAlert(\"Light mode has been enabled\",\"success\"); \n  }\n}\n\n  return (\n    <>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-5\">\n    <Textform showAlert={showAlert} heading= \"Enter The Text To Analyze Below\"mode={mode}/>\n    {/* <About/> */}\n    </div>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}